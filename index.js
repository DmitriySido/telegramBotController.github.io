const TelegramAPI = require('node-telegram-bot-api');
const axios = require('axios');


const token = '7438547813:AAH9c90rg62f-YXDZLXvwGlQQYWTQjar-As';
const bot = new TelegramAPI(token, {polling: true});

const screenshot = require('screenshot-desktop');
const fs = require('fs');

const { error } = require('console');


bot.setMyCommands([
  { command: '/open_google', description: '–û—Ç–∫—Ä—ã—Ç—å Google ü§ñ' },
  { command: '/open_spotify', description: '–û—Ç–∫—Ä—ã—Ç—å Spotify üé∂' },
  { command: '/open_youtube', description: '–û—Ç–∫—Ä—ã—Ç—å YouTube üëÄ'},
  { command: '/open_forza5', description: '–û—Ç–∫—Ä—ã—Ç—å ForzaHorizon5 ‚ù§'},
  { command: '/open_gpt', description: '–û—Ç–∫—Ä—ã—Ç—å GPT —á–∞—Ç üëª'},
  { command: '/screenshot', description: '–°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞ üì∏' },
  { command: '/system_info', description: '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ üñ•Ô∏è' },
  { command: '/music', description: '–í–∫–ª—é—á–∏—Ç—å Kizzaru ' },

  { command: '/start', description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞' },
]);


const errorText = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–∫—Ä—ã—Ç—å'


bot.on('message', (msg) => {
  const text = msg.text;
  const chatID = msg.chat.id;

  switch (text) {
    case '/open_google':
      axios.get('http://localhost:4000/open_google')
        .then(() => bot.sendMessage(chatID, 'Google –æ—Ç–∫—Ä—ã—Ç.'))
        .catch(() => bot.sendMessage(chatID, `${errorText} Google.`));
      break;

    case '/open_gpt':
      axios.get('http://localhost:4000/open_gpt')
        .then(() => bot.sendMessage(chatID, 'GPT –æ—Ç–∫—Ä—ã—Ç.'))
        .catch(() => bot.sendMessage(chatID, `${errorText} GPT.`));
      break;

    case '/open_spotify':
      axios.get('http://localhost:4000/open_spotify')
        .then(() => bot.sendMessage(chatID, 'Spotify –æ—Ç–∫—Ä—ã—Ç.'))
        .catch(() => bot.sendMessage(chatID, `${errorText} Spotify.`));
      break;

    case '/open_youtube':
      axios.get('http://localhost:4000/open_youtube')
        .then(() => bot.sendMessage(chatID, 'YouTube –æ—Ç–∫—Ä—ã—Ç.'))
        .catch(() => bot.sendMessage(chatID, `${errorText} YouTube.`));
      break;

    case '/open_forza5':
      axios.get('http://localhost:4000/open_forza5')
        .then(() => bot.sendMessage(chatID, 'Forza Horizon 5 –æ—Ç–∫—Ä—ã—Ça.'))
        .catch(() => bot.sendMessage(chatID, `${errorText} Forza Horizon 5.`));
      break;

      case '/music':
      axios.get('http://localhost:4000/music')
        .then(() => bot.sendMessage(chatID, '–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞'))
        .catch(() => bot.sendMessage(chatID, `${errorText} –º—É–∑—ã–∫—É.`));
      break;

      case '/screenshot':
        screenshot({ format: 'png' }).then((img) => {
          const filePath = './screenshot.png';
          fs.writeFileSync(filePath, img);
          bot.sendPhoto(chatID, filePath)
            .then(() => fs.unlinkSync(filePath)) // –£–¥–∞–ª—è–µ–º —Å–¥–µ–ª–∞–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
            .catch(error => bot.sendMessage(chatID, `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: ${error.message}`));
        }).catch((error) => bot.sendMessage(chatID, `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: ${error.message}`));
        break;

      case '/system_info':
        axios.get('http://localhost:4000/system_info')
        .then(response => bot.sendMessage(chatID, response.data))
        .catch(error => bot.sendMessage(chatID, `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ: ${error.message}`));
      break;

    case '/start':
      bot.sendMessage(chatID, '–ü—Ä–∏–≤–µ—ÇüòÄ —è –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–≤–æ–µ–≥–æ –ü–ö, –∏—Å–ø–æ–ª—å–∑—É–π –Ω—É–∂–Ω—ã–µ —Ç–µ–±–µ –∫–æ–º–∞–Ω–¥—ã —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –º–µ–Ω—è –≤ –¥–µ–ª–µüòú');
    break;

    default:
      bot.sendMessage(chatID, '–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã —è –Ω–µ –∑–Ω–∞—é!');
    break;
  }
});